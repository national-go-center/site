.sgf-viewer {
	/* config */
	$grid: (100 / 19) / 100;

	background: {
		color: #ca973e;
	}
	padding-top: 100%;
	position: fixed;
	left: 0;
	right: 0;
	top: 40px;

	&:before {
		//border: 1px solid black;
		background: {
			image:
				linear-gradient(180deg, black 0, transparent 1px),
				linear-gradient(90deg, black 0, transparent 1px);
			size: percentage($grid) percentage($grid);
		}
		bottom: 0;
		content: '';
		display: block;
		//left: $grid;
		left: 0;
		position: absolute;
		//right: $grid;
		right: 0;
		//top: $grid;
		top: 0;
	}

	.stone {
		$stoneSize: percentage($grid);
		border: {
			radius: 50%;
		}
		display: block;
		height: $stoneSize;
		position: absolute;
		width: $stoneSize;

		&:before, &:after {
			border-radius: 50%;
			bottom: 0;
			content: '';
			display: block;
			left: 0;
			position: absolute;
			right: 0;
			top: 0;
		}

		&:before {
			z-index: 2;
		}

		&.black {
			&:before {
				background: {
					color: black;
				}
			}
		}
		&.white {
			&:before {
				background: {
					color: hsla(0, 0%, 90%, 1);
				}
			}
		}

		$offset: $grid / 2;

		$stones: (
				(16, 3, B),(14, 16, W),(14, 3, B),(3, 15, B),(2, 13, W),(5, 15, B),(16, 15, W),(3, 2, B),(12, 2, W),(4, 4, B),(4, 5, W),(4, 3, B),(3, 6, W),(2, 4, B),(1, 4, B),(16, 9, W),(16, 7, B),(1, 5, B),(2, 7, W),(9, 16, B),(14, 9, W),(4, 12, B),(11, 16, W),(17, 15, B),(15, 15, W),(14, 11, B),(16, 11, W),(12, 11, B),(10, 14, W),(12, 13, B),(15, 13, W),(2, 14, B),(6, 15, W),(6, 14, B),(7, 15, W),(5, 16, B),(7, 14, W),(7, 17, B),(10, 12, W),(13, 9, B),(14, 8, W),(13, 8, B),(13, 7, W),(11, 8, B),(12, 7, W),(9, 13, B),(10, 13, W),(10, 10, B),(6, 13, W),(5, 14, B),(8, 11, W),(8, 10, B),(7, 10, W),(8, 9, B),(7, 9, W),(9, 11, B),(7, 11, W),(8, 7, B),(7, 8, W),(9, 6, B),(15, 5, W),(14, 6, B),(14, 5, W),(16, 5, B),(15, 6, W),(16, 6, B),(1, 14, W),(1, 15, B),(3, 14, W),(2, 15, B),(2, 11, W),(14, 13, B),(15, 2, W),(15, 3, B),(14, 2, W),(13, 3, B),(13, 2, W),(16, 2, B),(9, 2, W),(10, 3, B),(10, 2, W),(15, 10, B),(16, 10, W),(15, 9, B),(13, 10, W),(12, 10, B),(11, 5, W),(11, 4, B),(10, 6, W),(9, 5, B),(11, 7, W),(15, 12, B),(16, 12, W),(17, 14, B),(17, 16, W),(13, 15, B),(14, 14, W),(16, 13, B),(15, 14, W),(16, 8, B),(17, 9, W),(9, 12, B),(13, 16, B),(8, 16, W),(8, 17, B),(9, 15, W),(10, 16, B),(11, 17, W),(13, 14, B),(13, 17, W),(12, 17, B),(14, 17, W),(12, 16, B),(10, 15, W),(10, 17, B),(6, 2, W),(4, 10, B),(3, 10, W),(6, 12, B),(10, 18, W),(9, 17, B),(11, 15, W),(12, 18, B),(7, 12, W),(5, 13, B),(7, 13, W),(4, 9, B),(8, 8, W),(10, 5, B),(12, 5, W),(13, 4, B),(15, 8, W),(14, 10, B),(12, 9, W),(13, 11, B),(11, 9, W),(11, 10, B),(10, 9, W),(11, 18, B),(4, 1, W),(3, 1, B),(11, 3, W),(12, 4, B),(9, 3, W),(10, 4, B),(1, 13, W),(1, 7, B),(1, 8, W),(1, 6, B),(4, 2, W),(3, 3, B),(0, 15, W),(0, 16, B),(0, 14, W),(1, 16, B),(17, 13, W),(13, 5, B),(13, 6, W),(17, 8, B),(16, 1, W),(17, 1, B),(15, 1, W),(6, 3, B),(7, 3, W),(2, 8, B),(2, 9, W),(3, 8, B),(1, 9, W),(6, 4, B),(6, 1, W),(6, 6, B),(4, 7, W),(5, 5, B),(5, 8, W),(17, 0, B),(3, 0, W),(2, 0, B),(4, 0, W),(2, 1, B),(3, 12, W),(3, 5, B),(4, 6, W),(2, 6, B),(9, 7, W),(7, 4, B),(11, 12, W),(7, 2, W),(13, 18, B),(12, 12, W),(13, 12, B),(14, 18, W),(14, 15, B),(15, 16, W),(4, 8, B),(5, 7, W),(7, 7, B),(8, 4, W),(9, 4, B),(8, 2, W),(15, 11, B),(5, 9, W),(5, 10, B),(6, 11, W),(5, 12, B),(6, 7, W),(7, 5, B),(9, 9, W),(9, 10, B),(6, 16, W),(6, 17, B),(18, 8, W),(18, 7, B),(18, 9, W),(6, 10, B),(6, 9, W),(4, 14, B),(3, 13, W),(16, 0, B),(15, 0, W),(12, 3, B),(11, 2, W),(0, 8, B),(0, 9, W),(0, 7, B),(15, 7, W),(15, 4, B),(3, 7, W),(5, 2, B),(5, 1, W),(5, 3, B),(12, 14, W),(8, 5, B),(12, 15, W),(13, 13, B)
		);

		$i: 1;
		@each $x, $y, $color in $stones {
			&:nth-child(#{$i}) {
				left: percentage($grid * $x - $offset);
				top: percentage($grid * $y - $offset);

				@if $color == null {
					@if $i % 2 == 1 {
						$color: black;
					} @else {
						$color: white;
					}
				}
				@if $color == W {
					&:before {
						background: {
							color: hsla(0, 0%, 90%, 1);
						}
					}
				} @else {
					&:before {
						background: {
							color: black;
						}
					}
				}
				$i: $i + 1;
			}
		}
	}
}
